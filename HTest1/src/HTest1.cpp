/*
-----------------------------------------------------------------------------
Filename:    HTest1.cpp
-----------------------------------------------------------------------------

This source file is generated by the Ogre AppWizard.

Check out: http://conglomerate.berlios.de/wiki/doku.php?id=ogrewizards

Based on the Example Framework for OGRE
(Object-oriented Graphics Rendering Engine)

Copyright (c) 2000-2007 The OGRE Team
For the latest info, see http://www.ogre3d.org/

You may use this sample code for anything you like, it is not covered by the
LGPL like the rest of the OGRE engine.
-----------------------------------------------------------------------------
*/

#include "HKCommon.h"
#include "HTest1App.h"
#include "GHavok.h"
#include "GDebugger.h"
#include "GRakNet.h"


#if OGRE_PLATFORM == OGRE_PLATFORM_WIN32

#include "windows.h"
#endif

#ifdef __cplusplus
	extern "C" {
#endif

#if OGRE_PLATFORM == OGRE_PLATFORM_WIN32
		INT WINAPI WinMain( HINSTANCE hInst, HINSTANCE, LPSTR strCmdLine, INT )
#else
		int main(int argc, char *argv[])
#endif
		{
			//Start custom debugger
			GDebugger::GetSingleton().WriteToLog("Debugging Started\n-----------------\n");

			SocketDescriptor sd;
			SocketDescriptor sdTracker;
			//Setup networking
			if(strstr(strCmdLine,"-client")!=NULL){
				GDebugger::GetSingleton().ChangeFile("DebugClient.txt");
				GDebugger::GetSingleton().WriteToLog("Starting Client\n");
				GRakNet::GetSingleton().IsServer(false);
				sd.port=0;
			} else {
				GDebugger::GetSingleton().ChangeFile("DebugServer.txt");
				GDebugger::GetSingleton().WriteToLog("Starting Server\n");
				GRakNet::GetSingleton().IsServer(true);
				sd.port=12345; 
				sdTracker.port=0;
			}
			
			GDebugger::GetSingleton().WriteToLog("  - Initializing RakNet yo\n");
			GRakNet::GetSingleton().Init(sd);
			GDebugger::GetSingleton().WriteToLog("  - Raknet Complete.\n");

			//Create the Havok Environment first, should be a once in a life time call
			GDebugger::GetSingleton().WriteToLog("  - Initializing Havok...");
			GHavok::GetSingleton().SetupHavokEngine();
			GDebugger::GetSingleton().WriteToLog("Complete.\n");

			// Create application object
			HTest1App app;
			try {
				app.go();
				GHavok::GetSingleton().DestroyHavok();
			} catch( Ogre::Exception& e ) {
#if OGRE_PLATFORM == OGRE_PLATFORM_WIN32
				MessageBox( NULL, e.getFullDescription().c_str(), "An exception has occured!", MB_OK | MB_ICONERROR | MB_TASKMODAL);
#else
				std::cerr << "An exception has occured: " <<
					e.getFullDescription().c_str() << std::endl;
#endif
			}

			return 0;
		}

#ifdef __cplusplus
	}
#endif
